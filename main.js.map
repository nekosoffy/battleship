{"version":3,"file":"main.js","mappings":"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","sources":["webpack://standard-template/webpack/bootstrap","webpack://standard-template/webpack/runtime/global","webpack://standard-template/webpack/runtime/publicPath","webpack://standard-template/./src/scripts/gameBoard.js","webpack://standard-template/./src/scripts/ship.js","webpack://standard-template/./src/scripts/player.js","webpack://standard-template/./src/scripts/render.js","webpack://standard-template/./src/scripts/gameController.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","const gameBoard = function createGameboard() {\n  const board = Array.from({ length: 10 }, () => Array(10).fill(null));\n  const invalidCoordinates = [];\n  const unsinkedShips = [];\n  let isHorizontal = true;\n\n  const boardArray = function getBoardArray() {\n    return board;\n  };\n\n  const grid = function getGrid(x, y) {\n    return board[x][y];\n  };\n\n  const rotate = function rotateShipPlacement() {\n    isHorizontal = !isHorizontal;\n  };\n\n  const placeShip = function placeShipOnBoard(coordinates, object) {\n    const length = object.getLength();\n    const row = board[coordinates[0]];\n    const centerCol = coordinates[1];\n\n    if (row[centerCol] !== null) {\n      return false;\n    }\n\n    if (isHorizontal) {\n      const leftIndex = centerCol - Math.floor(length / 2);\n      const rightIndex = leftIndex + length - 1;\n\n      if (leftIndex < 0 || rightIndex >= 10) {\n        return false;\n      }\n\n      const shipPosition = row.slice(leftIndex, rightIndex + 1);\n\n      if (shipPosition.every((el) => el === null)) {\n        for (let i = leftIndex; i <= rightIndex; i++) {\n          row[i] = object;\n        }\n      } else {\n        return false;\n      }\n\n      unsinkedShips.push(object);\n    }\n\n    if (!isHorizontal) {\n      const upperIndex = coordinates[0] - Math.floor(length / 2);\n      const lowerIndex = upperIndex + length - 1;\n\n      for (let i = upperIndex; i <= lowerIndex; i++) {\n        if (board[i] === undefined || board[i][coordinates[1]] !== null) {\n          return false;\n        }\n      }\n\n      for (let i = upperIndex; i <= lowerIndex; i++) {\n        board[i][coordinates[1]] = object;\n      }\n\n      unsinkedShips.push(object);\n    }\n\n    return true;\n  };\n\n  const placeShipRandom = function placeShipOnBoardRandomly(object) {\n    if (Math.random() < 0.5) {\n      rotate();\n    }\n\n    let placement = false;\n\n    while (!placement) {\n      const x = Math.floor(Math.random() * 10);\n      const y = Math.floor(Math.random() * 10);\n      placement = placeShip([x, y], object);\n    }\n\n    return placement;\n  };\n\n  const receiveAttack = function receiveEnemyAttack(x, y) {\n    if (\n      invalidCoordinates.some((element) => element[0] === x && element[1] === y)\n    ) {\n      return false;\n    }\n\n    const target = board[x][y];\n    if (typeof target === 'object' && target !== null) {\n      target.hit();\n      board[x][y] = 'hit';\n      invalidCoordinates.push([x, y]);\n\n      if (target.isSunk() === true) {\n        unsinkedShips.splice(unsinkedShips[unsinkedShips.indexOf(target)], 1);\n      }\n\n      return 'ship';\n    }\n\n    if (target === null) {\n      board[x][y] = 'miss';\n      invalidCoordinates.push([x, y]);\n    }\n\n    return true;\n  };\n\n  const shipsSank = function checkAllShipsSank() {\n    if (!unsinkedShips.length) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return {\n    boardArray,\n    grid,\n    rotate,\n    placeShip,\n    placeShipRandom,\n    receiveAttack,\n    shipsSank,\n  };\n};\n\nexport default gameBoard;\n","const ship = function createShip(size) {\n  if (size < 2 || size > 5) {\n    return undefined;\n  }\n\n  const length = size;\n  let hits = 0;\n  let sunk = false;\n\n  const hit = function takeHit() {\n    hits += 1;\n  };\n\n  const isSunk = function isShipSunk() {\n    if (hits >= length) {\n      sunk = true;\n    }\n\n    return sunk;\n  };\n\n  const getLength = function getShipLength() {\n    return length;\n  };\n\n  return { hit, isSunk, getLength };\n};\n\nexport default ship;\n","import gameBoard from './gameBoard';\nimport ship from './ship';\n\nconst player = function createPlayer() {\n  const board = gameBoard();\n\n  const ships = {\n    two: ship(2),\n    threeOne: ship(3),\n    threeTwo: ship(3),\n    four: ship(4),\n    five: ship(5),\n  };\n\n  const getShip = function getShipType(type) {\n    return ships[type];\n  };\n\n  const placeAllShips = function placeAllShipsRandomly() {\n    const shipsToBePlaced = Object.values(ships);\n    while (shipsToBePlaced.length) {\n      if (board.placeShipRandom(shipsToBePlaced.at(-1))) {\n        shipsToBePlaced.pop();\n      }\n    }\n  };\n\n  return {\n    ...board,\n    getShip,\n    placeAllShips,\n  };\n};\n\nconst computer = function createComputer() {\n  const comp = player();\n\n  const validTargets = [];\n\n  for (let x = 0; x < 10; x++) {\n    for (let y = 0; y < 10; y++) {\n      if ((x + y) % 2 === 0) {\n        validTargets.push([x, y]);\n      }\n    }\n  }\n\n  let inHuntMode = true;\n  const targetStack = [];\n  let lastHitShot = null;\n  const invalidTargets = [];\n\n  const populateStack = function populateTargetStack() {\n    const newTargets = [\n      [lastHitShot[0], lastHitShot[1] - 1],\n      [lastHitShot[0] - 1, lastHitShot[1]],\n      [lastHitShot[0], lastHitShot[1] + 1],\n      [lastHitShot[0] + 1, lastHitShot[1]],\n    ].filter(\n      (el) =>\n        el[0] >= 0 &&\n        el[0] < 10 &&\n        el[1] >= 0 &&\n        el[1] < 10 &&\n        !invalidTargets.some(\n          (target) => target[0] === el[0] && target[1] === el[1],\n        ),\n    );\n\n    targetStack.push(...newTargets);\n  };\n\n  const checkStack = function checkTargetStack() {\n    if (!targetStack.length) {\n      inHuntMode = true;\n    }\n  };\n\n  const makePlay = function makeComputerPlay() {\n    const removeFromValidTargets = (array) => {\n      const index = validTargets.findIndex(\n        (el) => el[0] === array[0] && el[1] === array[1],\n      );\n\n      if (index !== -1) {\n        validTargets.splice(index, 1);\n      }\n    };\n\n    if (!inHuntMode) {\n      const coordinate = targetStack.pop();\n      invalidTargets.push(coordinate);\n      removeFromValidTargets(coordinate);\n      checkStack();\n      return coordinate;\n    }\n\n    const randomTarget =\n      validTargets[Math.floor(Math.random() * validTargets.length)];\n    invalidTargets.push(randomTarget);\n    removeFromValidTargets(randomTarget);\n    return randomTarget;\n  };\n\n  const setLastHitShot = function setlastHitShotShipCoordinate(coordinate) {\n    lastHitShot = coordinate;\n    populateStack();\n    inHuntMode = false;\n  };\n\n  return { ...comp, makePlay, setLastHitShot };\n};\n\nexport { player, computer };\n","import alien from '../images/alien.png';\nimport airplane from '../images/plane.svg';\nimport fire from '../images/fire.svg';\nimport energy from '../images/energy.svg';\n\nlet currentShipSize;\n\nconst main = document.querySelector('main');\n\nconst create = function createDOMElement(\n  element,\n  parent,\n  newClass = '',\n  attribute = null,\n  atrValue = '',\n  id = '',\n  textContent = '',\n) {\n  const el = document.createElement(element);\n\n  if (newClass) {\n    el.classList.add(newClass);\n  }\n\n  if (attribute) {\n    el.setAttribute(attribute, atrValue);\n  }\n\n  if (id) {\n    el.id = id;\n  }\n\n  if (textContent) {\n    el.textContent = textContent;\n  }\n\n  parent.appendChild(el);\n  return el;\n};\n\nconst renderGrid = function renderGridWithShips(array, mode = 'open') {\n  const openGrid = (el, div) => {\n    if (el === 'miss') {\n      create('img', div, '', 'src', energy, '', '');\n    }\n\n    if (typeof el === 'object' && el !== null) {\n      create('img', div, '', 'src', airplane, '', '');\n    }\n\n    if (el === 'hit') {\n      create('img', div, '', 'src', airplane, '', '');\n      div.classList.add('hit');\n    }\n  };\n\n  const hiddenGrid = (el, div) => {\n    if (el === 'miss') {\n      create('img', div, '', 'src', fire, '', '');\n      div.classList.add('miss');\n    }\n\n    if (el === 'hit') {\n      create('img', div, '', 'src', alien, '', '');\n      div.classList.add('hit');\n    }\n  };\n\n  main.replaceChildren();\n  const section = document.createElement('section');\n  const flatArray = array.flat();\n  flatArray.forEach((el) => {\n    const div = document.createElement('div');\n\n    if (mode === 'open') {\n      openGrid(el, div);\n    }\n\n    if (mode === 'hidden') {\n      hiddenGrid(el, div);\n\n      div.addEventListener('mouseenter', () => {\n        div.classList.add('hover');\n      });\n\n      div.addEventListener('mouseleave', () => {\n        div.classList.remove('hover');\n      });\n    }\n\n    section.appendChild(div);\n  });\n\n  main.prepend(section);\n};\n\nconst handleClick = function handleGridClick(target) {\n  let squares = target.parentNode.querySelectorAll('div');\n  squares = [...squares];\n  const coordinate = squares.indexOf(target);\n  const x = Math.floor(coordinate / 10);\n  const y = coordinate % 10;\n  return [x, y];\n};\n\nconst showShips = function showShipsForPlacement() {\n  const shipsContainer = document.querySelector('aside');\n\n  function createShipElement(num, size) {\n    const div = create(\n      'div',\n      shipsContainer,\n      'ship',\n      'draggable',\n      'true',\n      size,\n    );\n\n    for (let i = 0; i < num; i++) {\n      const img = create('img', div, '', 'src', airplane, '', '');\n      img.draggable = false;\n    }\n\n    return div;\n  }\n\n  const shipSizes = [\n    { num: 2, size: 'two' },\n    { num: 3, size: 'threeOne' },\n    { num: 3, size: 'threeTwo' },\n    { num: 4, size: 'four' },\n    { num: 5, size: 'five' },\n  ];\n\n  shipSizes.forEach(({ num, size }) => createShipElement(num, size));\n\n  const divs = shipsContainer.querySelectorAll('div');\n  divs.forEach((el) => {\n    el.addEventListener('dragstart', (event) => {\n      event.dataTransfer.setData('text', event.target.id);\n      currentShipSize = event.target.children.length;\n    });\n  });\n};\n\nconst toggleShipsContainer = function toggleShipsContainerVisibility(mode) {\n  const shipsContainer = document.querySelector('aside');\n  const combatBtn = document.querySelector('.combat-btn');\n\n  if (mode === 'off') {\n    shipsContainer.replaceChildren();\n    shipsContainer.classList.add('hidden');\n    combatBtn.disabled = false;\n    return;\n  }\n\n  if (mode === 'on') {\n    shipsContainer.replaceChildren();\n    showShips();\n    shipsContainer.classList.remove('hidden');\n    combatBtn.disabled = true;\n    return;\n  }\n\n  if (shipsContainer.childNodes.length === 0) {\n    shipsContainer.classList.toggle('hidden');\n    combatBtn.disabled = false;\n    return;\n  }\n\n  if (shipsContainer.classList.contains('hidden')) {\n    showShips();\n    shipsContainer.classList.toggle('hidden');\n    combatBtn.disabled = true;\n  }\n};\n\nconst renderBtn = function renderNewButton(className, text) {\n  const btnWrapper = document.querySelector('.btn-wrapper');\n  const button = create('button', btnWrapper, className, null, '', '', text);\n  return button;\n};\n\nconst gridHighlight = function gridHightlightWhenDragging(x, y, rect) {\n  const section = document.querySelector('section');\n\n  // Calculate cell size\n  const cellWidth = rect.width / 10;\n  const cellHeight = rect.height / 10;\n\n  // Find the nearest cell center\n  const column = Math.floor(x / cellWidth);\n  const row = Math.floor(y / cellHeight);\n\n  // Calculate the target index based on nearest cell\n  const targetIndex = row * 10 + column;\n  const index = Math.max(0, Math.min(targetIndex, 99));\n  const columns = 10;\n\n  section.querySelectorAll('.highlight').forEach((square) => {\n    square.classList.remove('highlight');\n  });\n  section.querySelectorAll('.invalid').forEach((square) => {\n    square.classList.remove('invalid');\n  });\n\n  const startIndex = index - Math.floor(currentShipSize / 2);\n  let isValid = true;\n\n  for (let i = 0; i < currentShipSize; i++) {\n    const highlightSquareIndex = startIndex + i;\n\n    if (\n      highlightSquareIndex >= 0 &&\n      highlightSquareIndex < section.children.length &&\n      Math.floor(highlightSquareIndex / columns) === Math.floor(index / columns)\n    ) {\n      const highlightSquare = section.children[highlightSquareIndex];\n\n      if (highlightSquare.classList.contains('occupied')) {\n        isValid = false;\n      }\n\n      highlightSquare.classList.add('highlight');\n    } else {\n      isValid = false;\n    }\n  }\n\n  if (!isValid) {\n    for (let i = 0; i < currentShipSize; i++) {\n      const highlightSquareIndex = startIndex + i;\n      if (\n        highlightSquareIndex >= 0 &&\n        highlightSquareIndex < section.children.length &&\n        Math.floor(highlightSquareIndex / columns) ===\n          Math.floor(index / columns)\n      ) {\n        const highlightSquare = section.children[highlightSquareIndex];\n        highlightSquare.classList.add('invalid');\n      }\n    }\n  }\n};\n\nconst removeHighlights = function removeHightlightsFromGrid() {\n  const section = document.querySelector('section');\n  section.querySelectorAll('.highlight').forEach((square) => {\n    square.classList.remove('highlight');\n    square.classList.remove('invalid');\n  });\n};\n\nconst enableShipPlacement = function enableShipPlacementOnGrid(player) {\n  const section = document.querySelector('section');\n  const divs = section.querySelectorAll('div');\n\n  section.addEventListener('drop', (event) => {\n    event.preventDefault();\n    const { target } = event;\n    const draggableData = event.dataTransfer.getData('text');\n    const draggableID = document.getElementById(draggableData);\n\n    if (!target.classList.contains('occupied') && !target.src) {\n      const coordinate = handleClick(target);\n      const validCoordinate = player.placeShip(\n        coordinate,\n        player.getShip(draggableData),\n      );\n\n      if (validCoordinate) {\n        renderGrid(player.boardArray());\n        draggableID.remove();\n        enableShipPlacement(player);\n      }\n    }\n\n    toggleShipsContainer();\n    removeHighlights();\n  });\n\n  section.addEventListener('dragover', (event) => {\n    event.preventDefault();\n    const rect = section.getBoundingClientRect();\n    const cursorXRelativeToGrid = event.clientX - rect.left;\n    const cursorYRelativeToGrid = event.clientY - rect.top;\n    gridHighlight(cursorXRelativeToGrid, cursorYRelativeToGrid, rect);\n  });\n\n  section.addEventListener('dragleave', (event) => {\n    event.preventDefault();\n    removeHighlights();\n  });\n\n  divs.forEach((el) => {\n    if (el.childNodes.length !== 0) {\n      el.classList.add('occupied');\n    }\n  });\n};\n\nconst announce = function announceInformation(string) {\n  const infoBox = document.querySelector('.intro-wrapper');\n  infoBox.replaceChildren();\n  create('h2', infoBox, 'information', null, '', '', string);\n};\n\nconst addCursor = function addAimCursor() {\n  const section = document.querySelector('section');\n  section.classList.add('field');\n};\n\nexport {\n  renderGrid,\n  handleClick,\n  showShips,\n  renderBtn,\n  gridHighlight,\n  removeHighlights,\n  enableShipPlacement,\n  announce,\n  toggleShipsContainer,\n  addCursor,\n};\n","import { player, computer } from './player';\nimport {\n  renderGrid,\n  handleClick,\n  announce,\n  showShips,\n  renderBtn,\n  enableShipPlacement,\n  toggleShipsContainer,\n  addCursor,\n} from './render';\nimport '../styles/reset.css';\nimport '../styles/styles.css';\n\nlet playerOne = player();\nlet cpuPlayer = computer();\nlet playerHasWon = false;\n\nconst playAgainstCpuBtn = document.getElementById('play-cpu-btn');\nconst mainHeading = document.querySelector('h1');\nconst container = document.querySelector('.container');\n\nconst reset = function resetGameState() {\n  playerHasWon = false;\n  playerOne = player();\n  cpuPlayer = computer();\n};\n\nconst resetShips = function resetShipPlacement() {\n  reset();\n  renderGrid(playerOne.boardArray());\n  enableShipPlacement(playerOne);\n  toggleShipsContainer('on');\n};\n\nconst handleRandomize = function handleRandomizedShipPlacement() {\n  reset();\n  playerOne.placeAllShips();\n  cpuPlayer.placeAllShips();\n  renderGrid(playerOne.boardArray());\n  toggleShipsContainer('off');\n};\n\nfunction delay(ms) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n}\n\nconst checkWin = function checkWinCondition() {\n  const replay = async () => {\n    await delay(1500);\n    const btnWrapper = document.querySelector('.btn-wrapper');\n    btnWrapper.replaceChildren();\n    btnWrapper.classList.remove('invisible');\n    renderBtn('replay-btn', 'Rematch!');\n  };\n\n  if (playerOne.shipsSank()) {\n    playerHasWon = true;\n    announce('You were annihilated...');\n    replay();\n  } else if (cpuPlayer.shipsSank()) {\n    playerHasWon = true;\n    announce('Humans have won!');\n    replay();\n  }\n};\n\nconst update = function updateRenderAndEventListener(callback) {\n  announce('Your move!');\n  renderGrid(cpuPlayer.boardArray(), 'hidden');\n  addCursor();\n  const section = document.querySelector('section');\n  section.addEventListener('click', (event) => {\n    if (playerHasWon === false) {\n      const { target } = event;\n      callback(target);\n    }\n  });\n};\n\nconst playAgainstComp = function playGameAgainstComputer(target) {\n  let validShot = false;\n\n  if (target.childNodes.length === 0 && !target.src) {\n    const clickedCoordinate = handleClick(target);\n    validShot = cpuPlayer.receiveAttack(\n      clickedCoordinate[0],\n      clickedCoordinate[1],\n    );\n  }\n\n  if (validShot) {\n    if (validShot === 'ship') {\n      announce('Your shot hit an alien!');\n    }\n\n    renderGrid(cpuPlayer.boardArray(), 'hidden');\n    addCursor();\n    checkWin();\n\n    const cpuTurn = async () => {\n      await delay(2000);\n      renderGrid(playerOne.boardArray());\n      announce('The aliens are attacking...');\n\n      await delay(2000);\n      const cpuTarget = cpuPlayer.makePlay();\n      const shot = playerOne.receiveAttack(cpuTarget[0], cpuTarget[1]);\n\n      renderGrid(playerOne.boardArray());\n\n      if (shot === 'ship') {\n        cpuPlayer.setLastHitShot(cpuTarget);\n        announce('An unit was striked!');\n      }\n\n      checkWin();\n\n      if (!playerHasWon) {\n        await delay(2000);\n        update(playAgainstComp);\n      }\n    };\n\n    if (!playerHasWon) {\n      cpuTurn();\n    }\n  }\n};\n\nconst enterCombat = function enterCombatAfterShipPlacement() {\n  const btnWrapper = document.querySelector('.btn-wrapper');\n  btnWrapper.classList.add('invisible');\n  toggleShipsContainer('off');\n  update(playAgainstComp);\n};\n\nconst startFreshGame = function startFreshGameAfterIntro() {\n  const btnWrapper = document.querySelector('.btn-wrapper');\n  btnWrapper.replaceChildren();\n  reset();\n  cpuPlayer.placeAllShips();\n  announce('Position your fleet!');\n  renderGrid(playerOne.boardArray());\n  renderBtn('reset-btn', 'Reset Placement');\n  const combatBtn = renderBtn('combat-btn', 'Begin Combat');\n  renderBtn('random-btn', 'Randomize');\n  toggleShipsContainer();\n  showShips();\n  enableShipPlacement(playerOne);\n  combatBtn.disabled = true;\n};\n\ncontainer.addEventListener('click', (event) => {\n  const { target } = event;\n\n  if (target.id === 'play-cpu-btn') {\n    mainHeading.remove();\n    playAgainstCpuBtn.remove();\n    startFreshGame();\n  }\n\n  if (target.classList.contains('reset-btn')) {\n    resetShips();\n  }\n\n  if (target.classList.contains('combat-btn')) {\n    enterCombat();\n  }\n\n  if (target.classList.contains('random-btn')) {\n    handleRandomize();\n  }\n\n  if (target.classList.contains('replay-btn')) {\n    startFreshGame();\n  }\n});\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","board","Array","from","fill","invalidCoordinates","unsinkedShips","isHorizontal","rotate","placeShip","coordinates","object","getLength","row","centerCol","leftIndex","Math","floor","rightIndex","slice","every","el","push","upperIndex","lowerIndex","undefined","boardArray","grid","x","y","placeShipRandom","random","placement","receiveAttack","some","element","target","hit","isSunk","splice","indexOf","shipsSank","size","hits","sunk","player","ships","two","threeOne","threeTwo","four","five","getShip","type","placeAllShips","shipsToBePlaced","Object","values","at","pop","computer","comp","validTargets","inHuntMode","targetStack","lastHitShot","invalidTargets","makePlay","removeFromValidTargets","array","index","findIndex","coordinate","randomTarget","setLastHitShot","newTargets","filter","populateStack","currentShipSize","main","querySelector","create","parent","newClass","attribute","atrValue","id","textContent","createElement","classList","add","setAttribute","appendChild","renderGrid","mode","replaceChildren","section","flat","forEach","div","openGrid","hiddenGrid","addEventListener","remove","prepend","handleClick","squares","parentNode","querySelectorAll","showShips","shipsContainer","num","draggable","createShipElement","event","dataTransfer","setData","children","toggleShipsContainer","combatBtn","disabled","childNodes","toggle","contains","renderBtn","className","text","btnWrapper","removeHighlights","square","enableShipPlacement","divs","preventDefault","draggableData","getData","draggableID","getElementById","rect","getBoundingClientRect","cellWidth","width","cellHeight","height","column","targetIndex","max","min","startIndex","isValid","highlightSquareIndex","highlightSquare","gridHighlight","clientX","left","clientY","top","announce","string","infoBox","addCursor","playerOne","cpuPlayer","playerHasWon","playAgainstCpuBtn","mainHeading","container","delay","ms","Promise","resolve","setTimeout","checkWin","replay","async","update","callback","playAgainstComp","validShot","clickedCoordinate","cpuTarget","shot","cpuTurn","startFreshGame"],"sourceRoot":""}